<?xml version="1.0" encoding="UTF-8"?>

<project basedir=".." default="all" name="WordPress for BlackBerry">
    <taskdef name="rapc"    classpath="build/bb-ant-tools-1.2.8.jar" classname="ca.slashdev.bb.tasks.RapcTask" />
    <taskdef name="jadtool" classpath="build/bb-ant-tools-1.2.8.jar" classname="ca.slashdev.bb.tasks.JadtoolTask" />
    <taskdef name="alx"     classpath="build/bb-ant-tools-1.2.8.jar" classname="ca.slashdev.bb.tasks.AlxTask" />
	
    <target name="init">
        <property file="build/build.properties" />
        <property file="build/release.properties" />
    	
        <property name="module.version" value="0.0" />

        <property name="platform"              value="os45" />
        <property name="module.name"           value="WordPress"/>
        <property name="module.release.prefix" value="WordPress"/>
                        
        <property name="module.fullname"       value="WordPress"/>
        <property name="module.desc"           value="WordPress for BlackBerry mobile app"/>
        <property name="module.company"        value="Automattic"/>

        <property name="dir.src"          value="src"  />
        <property name="dir.lib"           value="lib"  />
        <property name="dir.docs"          value="docs" />
        <property name="dir.build"         value="build" />
        <!-- get the value from prop file  
        property name="dir.output.base" value="c:/tmp/output" / -->
        <property name="dir.output"      value="${dir.output.base}/${platform}" />
        <property name="dir.output.rapc"          value="${dir.output}/rapc" />
        <property name="dir.output.sign"          value="${dir.output}/sign" />
        <property name="dir.output.release"       value="${dir.output}/release" />

    	<property name="dir.export"      value="${dir.output}/export" />
        
    	<property name="icon"            value="application-icon.png" />
        <property name="icon_rollover"   value="application-icon.png" />
    </target>
    
    
    <target name="clean" depends="init">
        <delete dir="${dir.output}" />
        <delete dir="${dir.export}" />
        <mkdir dir="${dir.output}"/>
        <mkdir dir="${dir.output.rapc}"/>
        <mkdir dir="${dir.output.sign}"/>
        <mkdir dir="${dir.output.release}"/>
        <mkdir dir="${dir.export}"/>
    </target>
  

    <target name="rapc" depends="init">
   
    	<echo message="Compiling ${module.name} with rapc"/>

        <copy tofile="${dir.output.rapc}/${icon}"
              file="${basedir}/src/${icon}"/>
    	
    	<patternset id="non.4.5.0.sources">
    	  <exclude name="com/wordpress/quickphoto/*" if="BlackBerrySDK4.5.0"/>
    	</patternset>
    	<patternset id="non.4.7.0.sources">
    	  <exclude name="com/wordpress/quickphoto/*" if="VER_4.7.0"/>
    	</patternset>
    	<patternset id="non.5.0.0.sources">
    	  <exclude name="com/wordpress/quickphoto/*" if="BlackBerrySDK5.0.0"/>
    	</patternset>
    	
        <rapc jdehome="${rim.home}" quiet="true"
            destdir="${dir.output.rapc}"
            output="${module.name}"
            verbose="true"
            nodebug="false">
          <!--  srcdir="${dir.src}"  attribute of the rapc tag -->
        	
        	<!-- define preprocessor tag -->
        	<!-- define tag="DEBUG" if="debug"/ --> 
        	<define tag="LOG_CONSOLE" if="log_console" />
        	<define tag="BlackBerrySDK4.5.0" if="BlackBerrySDK4.5.0" />
        	<define tag="VER_4.7.0" if="VER_4.7.0" />
        	<define tag="BlackBerrySDK5.0.0" if="BlackBerrySDK5.0.0" />
        	<define tag="BlackBerrySDK6.0.0" if="BlackBerrySDK6.0.0" />
        	<define tag="BlackBerrySDK7.0.0" if="BlackBerrySDK7.0.0" />
        	<define tag="IS_TORCH" if="is_torch" />
        	
            <jdp
                type="cldc"
            	midletclass="com.wordpress.bb.WordPress"
                vendor="${module.company}"
                title="${module.fullname}"
                description="${module.desc}"
                ribbonposition="0"
                systemmodule="false"
                runonstartup="true"
                arguments="autostartup"
                version="${module.version}"
                startuptier="7"
                icon="${icon}">
            	
            	<!-- entry arguments="autostartup"
            	                 systemmodule="false"
            	                 runonstartup="true"
            	                 startuptier="7"/ -->
        	</jdp>
        	<src>
           		<fileset dir="${dir.src}">
            		<include name="**/*"/>
           			<patternset refid="non.4.5.0.sources"/>
           			<patternset refid="non.4.7.0.sources"/>
            	    <patternset refid="non.5.0.0.sources"/>
            	</fileset>
        		<fileset dir="${dir.lib}">
        		   	<include name="**/*.jar"/>
        		</fileset>
			</src>

            <import>
            	<fileset dir="${rim.home}/lib/">
            	     <include name="**/*.jar"/>
 	           </fileset>
            </import>
        </rapc>
    </target>

	
    <target name="sign" depends="rapc">
       <copy todir="${dir.output.sign}">
            <fileset dir="${dir.output.rapc}">
                <include name="**/*"/>
            </fileset>
        </copy>

        <echo message="Please sign the .cod file located at ${dir.output.sign}" />
    
        <java jar="${rim.home}/bin/SignatureTool.jar" failonerror="true" fork="true">
            <arg value="-a"/>
           <arg value="-p"/> 
            <arg value="${bb.sigtool.password}"/> 
            <arg value="-C"/>
            <arg file="${dir.output.sign}/${module.name}.cod"/> 
        </java>

    </target>

	
    <target name="jad">
         <!-- propertyfile file="build/release.properties">
            <entry key="build.date" type="date" value="now" pattern="yyyyMMdd"/>
        </propertyfile -->
    	
    	<!-- add the additional props into jad file to activate the storm compatibility mode --> 
    	<copy todir="${dir.output.sign}" file="${basedir}/${dir.build}/additional.jad" />
       	<exec executable="${rim.home}/bin/UpdateJad.exe" dir="${dir.output.sign}" failonerror="true">
                <arg value="${module.name}.jad" />
        		<arg value="additional.jad" />
       </exec>
    	
    	
        <copy todir="${dir.output.release}">
            <fileset dir="${dir.output.sign}">
                <include name="**/*"/>
                <exclude name="*.debug"/>
            </fileset>
        </copy>
        <copy todir="${dir.output.release}/docs">
            <fileset dir="${dir.docs}">
                <include name="**/*"/>
            </fileset>
        </copy>

       	<jadtool input="${dir.output.sign}/${module.name}.jad" destdir="${dir.output.release}/ota">
            <fileset dir="${dir.output.sign}" includes="*.cod" />
        </jadtool>
 
    </target>

    <target name="alx" depends="init">
       <!-- copy the the cod files from OTA dir to Alx dir -->
        <copy todir="${dir.output.release}/alx">
            <fileset dir="${dir.output.release}/ota">
                <include name="*.cod"/>
            </fileset>
        </copy>
    	
    	<alx destdir="${dir.output.release}/alx" filename="${module.name}.alx">
            <application id="com.wordpress.bb.${module.release.prefix}" name="${module.fullname}"
                         description="${module.desc}"
                         version="${module.version}"
                         vendor="${module.company}">
                <codset>
                    <fileset dir="${dir.output.release}/alx" includes="*.cod" />
                </codset>
            </application>
        </alx>

        <zip zipfile="${dir.output.release}/alx/${module.name}_rev${module.version}.zip">
            <zipfileset dir="${dir.output.release}/alx" includes="*.cod, *.alx" />
        </zip>
    </target>

	<target name="release" depends="init,sign,jad,alx">
        <zip zipfile="${dir.output.release}/ota/${module.name}_rev${module.version}.zip">
            <zipfileset dir="${dir.output.release}/ota" includes="*.jad, *.cod, *.alx" />
        </zip>
    </target>

    <target name="all" depends="release,export" />

    <target name="export" depends="clean">
        
        <copy todir="${dir.export}/${dir.src}" preservelastmodified="true">
            <fileset dir="${dir.src}/"/>
        </copy>


        <copy todir="${dir.export}/${dir.lib}" preservelastmodified="true">
            <fileset dir="${dir.lib}/"/>
        </copy>

        <copy todir="${dir.export}/${dir.docs}" preservelastmodified="true">
             <fileset dir="${dir.docs}/"/>
        </copy>

        <copy todir="${dir.export}/${dir.build}" preservelastmodified="true">
                    <fileset dir="${dir.build}/"/>
        </copy>

        <zip destfile="${dir.export}/${module.name}-src-${module.version}.zip">
            <zipfileset dir="${dir.export}" prefix="${module.release.prefix}"/>
        </zip>
    </target>
    
</project>